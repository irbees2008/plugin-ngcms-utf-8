# =========================================================================== #
# NG CMS // Плагин // Ёлка                                                    #
# =========================================================================== #

Этот код представляет собой PHP-скрипт, который используется в CMS (например, NGCMS) для управления отображением контента на основе текущего состояния системы или страницы. Он реализует функциональность, которая позволяет динамически изменять содержимое шаблонов в зависимости от того, какая страница или раздел сайта отображается.

Основные моменты работы кода:
Защита от несанкционированного доступа :
php
Копировать
1
if (!defined('NGCMS')) die ('HAL');
Этот фрагмент проверяет, определена ли константа NGCMS. Если она не определена, скрипт завершает выполнение с сообщением 'HAL'. Это стандартная мера безопасности, чтобы предотвратить прямой вызов файла без загрузки основной системы.
Регистрация действия :
php
Копировать
1
add_act('index', 'elka');
Здесь функция elka регистрируется как обработчик для события 'index'. Это означает, что при выполнении определённых действий в системе (например, отображении страницы), будет вызвана функция elka.
Функция elka :
Функция elka выполняет основную логику. Она использует глобальные переменные ($confArray, $template, $CurrentHandler, $catz, $SYSTEM_FLAGS) для анализа текущего состояния системы и динамического изменения содержимого шаблонов.
Обработка шаблонов через регулярные выражения :
Внутри функции elka используются регулярные выражения для поиска и замены специальных тегов в шаблонах. Эти теги выглядят как [elka_...] и используются для условного отображения контента.
Пример:
php
Копировать
1
$template['regx']['/\[elka_morda\](.*?)\[\/elka_morda\]/si'] = '\\1';
Если текущая страница соответствует определённым условиям (например, главная страница новостей), то содержимое между тегами [elka_morda] и [/elka_morda] остаётся в шаблоне.
В противном случае это содержимое удаляется.
Условия для разных страниц :
Функция проверяет значения $CurrentHandler['pluginName'] и $CurrentHandler['handlerName'], чтобы определить, какая страница или раздел сайта отображается. Например:
Главная страница новостей (news + main).
Страница категории новостей (news + by.category).
Полная новость (news + news).
Страница статики (static).
Страница ошибки 404.
Страница поиска.
Профиль пользователя.
Логин/регистрация.
И другие.
Обработка категорий :
Код также анализирует массив $catz, который содержит информацию о категориях. Для каждой категории создаются правила, которые позволяют отображать или скрывать контент в зависимости от текущей категории.
Примеры условий :
Отображение контента только на главной странице:
php
Копировать
1
if ($CurrentHandler['pluginName'] == 'news' && $CurrentHandler['handlerName'] == 'main')
Отображение контента только на странице полной новости:
php
Копировать
1
if ($CurrentHandler['pluginName'] == 'news' && $CurrentHandler['handlerName'] == 'news')
Циклы для категорий :
Код проходит по всем категориям (foreach ($catz as $k)) и создаёт правила для отображения контента в зависимости от текущей категории:
php
Копировать
1
$template['regx']['#\[elka_category-'.$k["alt"].'\](.+?)\[/elka_category-'.$k["alt"].'\]#is'] = (isset($SYSTEM_FLAGS['news']['currentCategory.id']) && ($k['id'] == $SYSTEM_FLAGS['news']['currentCategory.id']))?'\\1':'';
Если текущая категория совпадает с категорией из массива $catz, содержимое между тегами [elka_category-alt] и [/elka_category-alt] остаётся.
В противном случае оно удаляется.
Обработка плагинов :
Код также учитывает различные плагины (например, tags, lastcomments, feedback) и создаёт правила для их отображения.
Заключение
Этот код предоставляет гибкий механизм для управления отображением контента в шаблонах CMS. Он позволяет администратору или разработчику создавать динамические страницы, где контент показывается или скрывается в зависимости от текущего состояния системы (например, страница, категория, плагин).